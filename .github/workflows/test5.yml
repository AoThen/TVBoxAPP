name: Build-dart_simple_live

on:
  workflow_dispatch:
  # push:

jobs:
  # 打包Android、iOS、Mac
  build-mac-ios-android:
    runs-on: macos-latest

    permissions:
      contents: write

    steps:
      # 签出代码
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Source Code
        run: |
          git clone --depth 1 -b dev https://github.com/xiaoyaocz/dart_simple_live.git simple_live_tv


      # 设置JAVA环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: "gradle"

      # 设置Flutter
      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.x'
          cache: true 


      # 更新Flutter的packages
      - name: Restore tv packages
        run: |
          cd simple_live_tv/simple_live_tv_app
          flutter pub get


      # TV APK签名设置
      - name: Create tv key.properties
        run: |
          echo "storeFile=${{ github.workspace }}/.github/workflows/TVBoxOSC.jks" > simple_live_tv/simple_live_tv_app/android/key.properties
          echo "storePassword=TVBoxOSC" >> simple_live_tv/simple_live_tv_app/android/key.properties
          echo "keyPassword=TVBoxOSC" >> simple_live_tv/simple_live_tv_app/android/key.properties
          echo "keyAlias=TVBoxOSC" >> simple_live_tv/simple_live_tv_app/android/key.properties

      #打包 Android TV APK
      - name: Build TV APK
        run: |
          cd simple_live_tv/simple_live_tv_app
          flutter build apk --release --split-per-abi

      - name: Mv App
        run: |
            # 进入 APK 输出目录
            cd simple_live_tv/simple_live_tv_app
            cd build/app/outputs/flutter-apk/

            # 重命名 APK 文件
            mv app-armeabi-v7a-release.apk simple_live_tv_app-armeabi-v7a.apk
            mv app-arm64-v8a-release.apk simple_live_tv_app-arm64-v8a.apk
            # mv app-x86-release.apk simple_live_tv_app-x86.apk
            # mv app-x86_64-release.apk simple_live_tv_app-x86_64.apk

      #上传TV APK至Artifacts
      - name: Upload TV APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: simple_live_tv_app
          path: |
            simple_live_tv/simple_live_tv_app/build/app/outputs/flutter-apk/simple_live_tv_app-armeabi-v7a.apk
            simple_live_tv/simple_live_tv_app/build/app/outputs/flutter-apk/simple_live_tv_app-arm64-v8a.apk



      # 更新Flutter的packages
      - name: Restore app packages
        run: |
          cd simple_live_tv/simple_live_app
          flutter pub get


      # TV APK签名设置
      - name: Create app key.properties
        run: |
          echo "storeFile=${{ github.workspace }}/.github/workflows/TVBoxOSC.jks" > simple_live_tv/simple_live_app/android/key.properties
          echo "storePassword=TVBoxOSC" >> simple_live_tv/simple_live_app/android/key.properties
          echo "keyPassword=TVBoxOSC" >> simple_live_tv/simple_live_app/android/key.properties
          echo "keyAlias=TVBoxOSC" >> simple_live_tv/simple_live_app/android/key.properties

      #打包 Android TV APK
      - name: Build app APK
        run: |
          cd simple_live_tv/simple_live_app
          flutter build apk --release --split-per-abi


      - name: Mv App
        run: |
            cd simple_live_tv/simple_live_app
            # 进入 APK 输出目录
            cd build/app/outputs/flutter-apk/

            # 重命名 APK 文件
            mv app-armeabi-v7a-release.apk simple_live_app-armeabi-v7a.apk
            mv app-arm64-v8a-release.apk simple_live_app-arm64-v8a.apk
            # mv app-x86-release.apk simple_live_app-x86.apk
            # mv app-x86_64-release.apk simple_live_app-x86_64.apk

      #上传TV APK至Artifacts
      - name: Upload app APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: simple_live_app
          path: |
            simple_live_tv/simple_live_app/build/app/outputs/flutter-apk/simple_live_app-armeabi-v7a.apk
            simple_live_tv/simple_live_app/build/app/outputs/flutter-apk/simple_live_app-arm64-v8a.apk


      - name: Delete workflow runs
        uses: AoThen/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3